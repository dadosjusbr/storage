// Code generated by MockGen. DO NOT EDIT.
// Source: ./repo/file_storage/istorage_repository.go

// Package mock_file_storage is a generated GoMock package.
package file_storage

import (
	reflect "reflect"

	models "github.com/dadosjusbr/storage/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStorageRepository is a mock of IStorageRepository interface.
type MockIStorageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageRepositoryMockRecorder
}

// MockIStorageRepositoryMockRecorder is the mock recorder for MockIStorageRepository.
type MockIStorageRepositoryMockRecorder struct {
	mock *MockIStorageRepository
}

// NewMockIStorageRepository creates a new mock instance.
func NewMockIStorageRepository(ctrl *gomock.Controller) *MockIStorageRepository {
	mock := &MockIStorageRepository{ctrl: ctrl}
	mock.recorder = &MockIStorageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStorageRepository) EXPECT() *MockIStorageRepositoryMockRecorder {
	return m.recorder
}

// GetFile mocks base method.
func (m *MockIStorageRepository) GetFile(dstFolder string) (*models.Backup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", dstFolder)
	ret0, _ := ret[0].(*models.Backup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockIStorageRepositoryMockRecorder) GetFile(dstFolder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockIStorageRepository)(nil).GetFile), dstFolder)
}

// UploadFile mocks base method.
func (m *MockIStorageRepository) UploadFile(srcPath, dstFolder string) (*models.Backup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", srcPath, dstFolder)
	ret0, _ := ret[0].(*models.Backup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockIStorageRepositoryMockRecorder) UploadFile(srcPath, dstFolder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockIStorageRepository)(nil).UploadFile), srcPath, dstFolder)
}
