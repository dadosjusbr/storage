// Code generated by MockGen. DO NOT EDIT.
// Source: ./repo/file_storage/interface.go

// Package mock_file_storage is a generated GoMock package.
package file_storage

import (
	reflect "reflect"

	models "github.com/dadosjusbr/storage/models"
	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetFile mocks base method.
func (m *MockInterface) GetFile(dstFolder string) (*models.Backup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", dstFolder)
	ret0, _ := ret[0].(*models.Backup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockInterfaceMockRecorder) GetFile(dstFolder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockInterface)(nil).GetFile), dstFolder)
}

// UploadFile mocks base method.
func (m *MockInterface) UploadFile(srcPath, dstFolder string) (*models.Backup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", srcPath, dstFolder)
	ret0, _ := ret[0].(*models.Backup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockInterfaceMockRecorder) UploadFile(srcPath, dstFolder interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockInterface)(nil).UploadFile), srcPath, dstFolder)
}
